Updateing and Deploying on GH pages.

What's this? It seems that my notes and cheat sheet are under revision control.

1 Activate the V-env: source eval-env/bin/activate

2 Update pip: pip install -U pip

3 Update pip installed packages: pip freeze — local | grep -v ‘^\-e’ | cut -d = -f 1 | xargs -n1 pip install -U

4 Refreeze pip: pip freeze > requirements.txt

5 Fix the pkg-resources bug: nano requirements.txt
     remove the pkg-resources line.

6 install ghp-import: pip install ghp-import

7  Change SITEURL: edit publishconf.py.
  Add THEME: edit pelicanconf.py.


7.1 Build for preview:
  $ pelican content -o output -s pelicanconf.py
  $ python -m http.server

8 Commit changes and push master branch
   $ git status
   $ git add .
   $ git commit -m"comment"
   $ git push origin master

7  Publish the output:
	$ pelican content -o output -s publishconf.py
	$ ghp-import output
	$ git push origin gh-pages

8 Setup Github to host: Settings -> Github pages -> gh-pages branch.

9 Site is at: https://greeder59.github.io/eval-pelican/

 === Custom domain name setup ===

10 Register the domain name with Namecheap.
	In this case, eval-pelican.com

11 Add a custom domain to the Github repository (under settings)
	www.eval-pelican.com

12 Configure the domain at Namecheap.
	On the dashboard, click the manage button for the domain.
	Click on Advanced DNS, then Add New record.
	Add 5 new records: CNAME: greeder59.github.io. A records: @ 185.199.[108 to 111].153
	Delete the records that were already there.
	
13 Configure Github pages site.
	Remove and re-add the custom domain to the Github repository.
	It may take a while, but when it is available, choose HTTPs
	A CNAME file will be created in the code repository which may or may not cause a problem with ghp-import. Yes it will!

	To use a custom domain with GitHub Pages, you need to put the domain of your site (e.g., blog.example.com) inside a CNAME file at the root of your site. 
	To do this, create the content/extra/ directory and add a CNAME file to it. 
	Then use the STATIC_PATHS setting to tell Pelican to copy this file to your output directory. For example:

	STATIC_PATHS = ['images', 'extra/CNAME']
	EXTRA_PATH_METADATA = {'extra/CNAME': {'path': 'CNAME'},}
	
	

